// Code generated by MockGen. DO NOT EDIT.
// Source: C:/Users/karishma-yadav/Documents/golang/csv-microservice/services/csv_service.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "github.com/golang/mock/gomock"
)

// MockServiceInterface is a mock of ServiceInterface interface.
type MockServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockServiceInterfaceMockRecorder
}

// MockServiceInterfaceMockRecorder is the mock recorder for MockServiceInterface.
type MockServiceInterfaceMockRecorder struct {
	mock *MockServiceInterface
}

// NewMockServiceInterface creates a new mock instance.
func NewMockServiceInterface(ctrl *gomock.Controller) *MockServiceInterface {
	mock := &MockServiceInterface{ctrl: ctrl}
	mock.recorder = &MockServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockServiceInterface) EXPECT() *MockServiceInterfaceMockRecorder {
	return m.recorder
}

// AddRecord mocks base method.
func (m *MockServiceInterface) AddRecord(ctx *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "AddRecord", ctx)
}

// AddRecord indicates an expected call of AddRecord.
func (mr *MockServiceInterfaceMockRecorder) AddRecord(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddRecord", reflect.TypeOf((*MockServiceInterface)(nil).AddRecord), ctx)
}

// DeleteRecord mocks base method.
func (m *MockServiceInterface) DeleteRecord(ctx *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "DeleteRecord", ctx)
}

// DeleteRecord indicates an expected call of DeleteRecord.
func (mr *MockServiceInterfaceMockRecorder) DeleteRecord(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteRecord", reflect.TypeOf((*MockServiceInterface)(nil).DeleteRecord), ctx)
}

// ListAllEntries mocks base method.
func (m *MockServiceInterface) ListAllEntries(ctx *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ListAllEntries", ctx)
}

// ListAllEntries indicates an expected call of ListAllEntries.
func (mr *MockServiceInterfaceMockRecorder) ListAllEntries(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListAllEntries", reflect.TypeOf((*MockServiceInterface)(nil).ListAllEntries), ctx)
}

// ListEntriesByPages mocks base method.
func (m *MockServiceInterface) ListEntriesByPages(ctx *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ListEntriesByPages", ctx)
}

// ListEntriesByPages indicates an expected call of ListEntriesByPages.
func (mr *MockServiceInterfaceMockRecorder) ListEntriesByPages(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListEntriesByPages", reflect.TypeOf((*MockServiceInterface)(nil).ListEntriesByPages), ctx)
}

// QueryUpdates mocks base method.
func (m *MockServiceInterface) QueryUpdates(ctx *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "QueryUpdates", ctx)
}

// QueryUpdates indicates an expected call of QueryUpdates.
func (mr *MockServiceInterfaceMockRecorder) QueryUpdates(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "QueryUpdates", reflect.TypeOf((*MockServiceInterface)(nil).QueryUpdates), ctx)
}

// UploadCSV mocks base method.
func (m *MockServiceInterface) UploadCSV(ctx *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "UploadCSV", ctx)
}

// UploadCSV indicates an expected call of UploadCSV.
func (mr *MockServiceInterfaceMockRecorder) UploadCSV(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UploadCSV", reflect.TypeOf((*MockServiceInterface)(nil).UploadCSV), ctx)
}
